// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/config/interface.go

package mock_config

import (
	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return _m.recorder
}

// Init mocks base method
func (_m *MockInterface) Init() error {
	ret := _m.ctrl.Call(_m, "Init")
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (_mr *MockInterfaceMockRecorder) Init() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init")
}

// ReadConfig mocks base method
func (_m *MockInterface) ReadConfig(configFilePath string) error {
	ret := _m.ctrl.Call(_m, "ReadConfig", configFilePath)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadConfig indicates an expected call of ReadConfig
func (_mr *MockInterfaceMockRecorder) ReadConfig(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadConfig", arg0)
}

// Set mocks base method
func (_m *MockInterface) Set(key string, value interface{}) {
	_m.ctrl.Call(_m, "Set", key, value)
}

// Set indicates an expected call of Set
func (_mr *MockInterfaceMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Set", arg0, arg1)
}

// SetDefault mocks base method
func (_m *MockInterface) SetDefault(key string, value interface{}) {
	_m.ctrl.Call(_m, "SetDefault", key, value)
}

// SetDefault indicates an expected call of SetDefault
func (_mr *MockInterfaceMockRecorder) SetDefault(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetDefault", arg0, arg1)
}

// AllSettings mocks base method
func (_m *MockInterface) AllSettings() map[string]interface{} {
	ret := _m.ctrl.Call(_m, "AllSettings")
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// AllSettings indicates an expected call of AllSettings
func (_mr *MockInterfaceMockRecorder) AllSettings() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AllSettings")
}

// IsSet mocks base method
func (_m *MockInterface) IsSet(key string) bool {
	ret := _m.ctrl.Call(_m, "IsSet", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsSet indicates an expected call of IsSet
func (_mr *MockInterfaceMockRecorder) IsSet(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IsSet", arg0)
}

// Get mocks base method
func (_m *MockInterface) Get(key string) interface{} {
	ret := _m.ctrl.Call(_m, "Get", key)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get
func (_mr *MockInterfaceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

// GetBool mocks base method
func (_m *MockInterface) GetBool(key string) bool {
	ret := _m.ctrl.Call(_m, "GetBool", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBool indicates an expected call of GetBool
func (_mr *MockInterfaceMockRecorder) GetBool(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBool", arg0)
}

// GetInt mocks base method
func (_m *MockInterface) GetInt(key string) int {
	ret := _m.ctrl.Call(_m, "GetInt", key)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetInt indicates an expected call of GetInt
func (_mr *MockInterfaceMockRecorder) GetInt(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetInt", arg0)
}

// GetString mocks base method
func (_m *MockInterface) GetString(key string) string {
	ret := _m.ctrl.Call(_m, "GetString", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetString indicates an expected call of GetString
func (_mr *MockInterfaceMockRecorder) GetString(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetString", arg0)
}

// GetStringSlice mocks base method
func (_m *MockInterface) GetStringSlice(key string) []string {
	ret := _m.ctrl.Call(_m, "GetStringSlice", key)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetStringSlice indicates an expected call of GetStringSlice
func (_mr *MockInterfaceMockRecorder) GetStringSlice(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetStringSlice", arg0)
}

// GetBase64Decoded mocks base method
func (_m *MockInterface) GetBase64Decoded(key string) (string, error) {
	ret := _m.ctrl.Call(_m, "GetBase64Decoded", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBase64Decoded indicates an expected call of GetBase64Decoded
func (_mr *MockInterfaceMockRecorder) GetBase64Decoded(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBase64Decoded", arg0)
}

// UnmarshalKey mocks base method
func (_m *MockInterface) UnmarshalKey(key string, rawVal interface{}) error {
	ret := _m.ctrl.Call(_m, "UnmarshalKey", key, rawVal)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnmarshalKey indicates an expected call of UnmarshalKey
func (_mr *MockInterfaceMockRecorder) UnmarshalKey(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UnmarshalKey", arg0, arg1)
}
